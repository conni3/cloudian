<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloudian</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Cloudian</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>© 2025 Connie</copyright>
    <lastBuildDate>Mon, 02 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Part 1: Foundations &amp; “Eight Great Ideas”</title>
      <link>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-1/</guid>
      <description>Preface # The preface starts with a motivation to read this book - professionals of every computing specialty should understand both hardware and software. This point was emphasized when the authors mentioned the switch from uniprocessor to multicore microprocessors (which will be emphasized many more times throughout Chapter 1).</description>
      
    </item>
    
    <item>
      <title>Part 2: Inside the Machine – Abstraction Layers &amp; Technologies</title>
      <link>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-2/</guid>
      <description>Below Your Program # For computers to run complex applications, there needs to be some sort of translation. Computers can only run simple operations; if we were to write the program for example for this website (although a simple application) - we need so much effort and time.</description>
      
    </item>
    
    <item>
      <title>Part 3: Performance, Power &amp; the “Sea Change”</title>
      <link>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-3/</guid>
      <description>Performance # When you are choosing a computer, how should you choose? Is it the computer that performs operations the fastest, one that does the most work, or the one that consumes least power?</description>
      
    </item>
    
    <item>
      <title>Part 4: Real-World Examples &amp; Wrap-Up</title>
      <link>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/computer-organization/patterson--hennessy-2020/chapter-1/part-4/</guid>
      <description>Benchmarking the Intel Core i7 # SPEC CPU Benchmark # If you had 2 computers, how would you know one of them performed better than the other? Whichever computer that completes the task faster is the better computer.</description>
      
    </item>
    
    <item>
      <title>Internship Timeline</title>
      <link>http://localhost:1313/posts/internship-timeline/</link>
      <pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/internship-timeline/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Motivation for the internship: 
    &lt;div id=&#34;motivation-for-the-internship&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#motivation-for-the-internship&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;I am passionate about forging a career in research and innovation within computer engineering. This internship offers a unique opportunity to translate my theoretical knowledge into hands-on expertise by designing and building a processor from the ground up.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Week 1</title>
      <link>http://localhost:1313/posts/learning-logs/week-1/</link>
      <pubDate>Mon, 19 May 2025 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/learning-logs/week-1/</guid>
      <description>Week 1 Learning Log (May 19–23, 2025) # 1. Objectives # FPGA Architecture &amp;amp; Tools Understand FPGA internal architecture: CLBs (LUTs, muxes, flip-flops), on-chip SRAM/Block RAM Install and configure Vivado/Vitis 2022.</description>
      
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/posts/computer-organization/mips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/computer-organization/mips/</guid>
      <description>MIPS (Microprocessor without Interlocked Pipeline Stages)
a classic RISC (Reduced Instruction Set Computer) architecture simplicity, efficiency, and ease of pipelining. clean, regular instruction formats five-stage pipeline found in embedded devices where intruction set is nearly invisible, so it is hard to find a computer to download and run mips programs</description>
      
    </item>
    
    <item>
      <title>Bi-stable Flip Flop</title>
      <link>http://localhost:1313/posts/digital-logic-circuits/bistable-flip-flop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/digital-logic-circuits/bistable-flip-flop/</guid>
      <description>At the heart of an SRAM cell lies a bistable flip-flop, which is a circuit capable of holding one of two stable states: logic &amp;lsquo;0&amp;rsquo; or logic &amp;lsquo;1&amp;rsquo;. This flip-flop is typically constructed using two cross-coupled inverters</description>
      
    </item>
    
    <item>
      <title>Configuration Logic Block</title>
      <link>http://localhost:1313/posts/digital-logic-circuits/clb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/digital-logic-circuits/clb/</guid>
      <description>The architecture of FPGAs rely heavily on Configuration Logic Blocks (CLBs). When you look at it, it is essentially a matrix of these CLBs, wired together by the device&amp;rsquo;s programmable interconnects.</description>
      
    </item>
    
    <item>
      <title>LUT</title>
      <link>http://localhost:1313/posts/digital-logic-circuits/luts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/digital-logic-circuits/luts/</guid>
      <description>Definition # Look up table is a memory. Instead of recomputing a circuit or a logic function every time, we compute and store in LUTs. Then depending on the input, FPGA looks up from the table and output that result.</description>
      
    </item>
    
    <item>
      <title>Sequential access memories</title>
      <link>http://localhost:1313/posts/computer-organization/sequential-access-memories/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/computer-organization/sequential-access-memories/</guid>
      <description></description>
      
    </item>
    
    <item>
      <title>SRAM</title>
      <link>http://localhost:1313/posts/digital-logic-circuits/sram/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/digital-logic-circuits/sram/</guid>
      <description>SRAMs are static memory. They are implemented using 6 transistors usually and because of that more expensive. Fills 2 needs:
direct interface with CPU at speeds not attainable by DRAMs replace DRAMs in systems with very low power consumption In 1st use, SRAM serves as cache memory, interfacing between DRAMs and the CPU For 2nd use, SRAM is used instead of DRAM.</description>
      
    </item>
    
    <item>
      <title>Week 2</title>
      <link>http://localhost:1313/posts/learning-logs/week-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/learning-logs/week-2/</guid>
      <description>Week 2 Learning Log (May 26–30, 2025) # 1. Objectives # HDL Implementation &amp;amp; Simulation Implement and simulate the following combinational primitives: 4-bit Subtractor (subtractor4.v) 2-to-1 Multiplexer (mux2to1.v) 4-to-1 Multiplexer (mux4to1.</description>
      
    </item>
    
    <item>
      <title>Week 3</title>
      <link>http://localhost:1313/posts/learning-logs/week-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/learning-logs/week-3/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;Week 3 Learning Log (June 2–6, 2025) 
    &lt;div id=&#34;week-3-learning-log-june-26-2025&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#week-3-learning-log-june-26-2025&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;


&lt;h3 class=&#34;relative group&#34;&gt;1. Objectives 
    &lt;div id=&#34;1-objectives&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1-objectives&#34; aria-label=&#34;Anchor&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ALU Implementation &amp;amp; Testing&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Design a simple 4-bit ALU using Vivado IP Integrator arithmetic blocks (&lt;code&gt;alu_bd.v&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Verify functionality via testbench and hardware simulation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;FPGA Design Flow&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Meet with Sanka to review end-to-end FPGA design flow (synthesis, implementation, place-and-route)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
      
    </item>
    
    <item>
      <title>Week 4</title>
      <link>http://localhost:1313/posts/learning-logs/week-4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/learning-logs/week-4/</guid>
      <description>📅 Monday, June 9 # Moving from Hall 2 to Hall 4 📅 Monday, June 2 # Finish writing the chapter 1 arcticles (Patterson and Hennessy) Read about Chapter 1, 2, and 4 from Sarah L.</description>
      
    </item>
    
  </channel>
</rss>
